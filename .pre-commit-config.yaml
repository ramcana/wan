# Pre-commit hooks configuration for WAN22 Video Generation System
# See https://pre-commit.com for more information

repos:
  # Built-in hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
      - id: check-added-large-files
        args: ["--maxkb=10240"] # 10MB limit
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable

  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 23.7.0
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88]

  # Python import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: [--profile=black]

  # Python linting
  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        args: [--max-line-length=88, --extend-ignore=E203, W503]

  # Security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, --skip=B101, B601]
        exclude: ^tests/

  # Custom project-specific hooks
  - repo: local
    hooks:
      # Test health check
      - id: test-health-check
        name: Test Health Check
        entry: python tools/health-checker/pre_commit_test_health.py
        language: python
        files: ^(tests/|backend/|scripts/).*\.py$
        pass_filenames: false
        always_run: false

      # Configuration validation
      - id: config-validation
        name: Configuration Validation
        entry: python tools/config-manager/pre_commit_config_validation.py
        language: python
        files: ^config/.*\.(yaml|yml|json)$
        pass_filenames: true

      # Documentation link check
      - id: doc-link-check
        name: Documentation Link Check
        entry: python tools/doc-generator/pre_commit_link_check.py
        language: python
        files: ^docs/.*\.md$
        pass_filenames: true

      # Import path validation
      - id: import-validation
        name: Import Path Validation
        entry: python tools/health-checker/pre_commit_import_validation.py
        language: python
        files: ^(backend/|scripts/|tests/).*\.py$
        pass_filenames: true

      # Performance regression check
      - id: performance-check
        name: Performance Regression Check
        entry: python tools/health-checker/pre_commit_performance_check.py
        language: python
        files: ^(backend/|scripts/).*\.py$
        pass_filenames: false
        stages: [pre-push]

      # Security configuration check
      - id: security-config-check
        name: Security Configuration Check
        entry: python tools/config-manager/pre_commit_security_check.py
        language: python
        files: ^config/.*\.(yaml|yml|json)$
        pass_filenames: true

  # Frontend hooks (if Node.js is available)
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.0
    hooks:
      - id: prettier
        files: ^frontend/.*\.(js|jsx|ts|tsx|json|css|md)$
        exclude: ^frontend/(node_modules|dist)/

  # TypeScript checking
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.44.0
    hooks:
      - id: eslint
        files: ^frontend/src/.*\.(js|jsx|ts|tsx)$
        additional_dependencies:
          - eslint@8.44.0
          - "@typescript-eslint/parser@6.0.0"
          - "@typescript-eslint/eslint-plugin@6.0.0"

# Global configuration
default_stages: [commit]
fail_fast: false
minimum_pre_commit_version: "3.0.0"

# CI configuration
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ""
  autoupdate_commit_msg: "[pre-commit.ci] pre-commit autoupdate"
  autoupdate_schedule: weekly
  skip: []
  submodules: false
