version: '3.8'

services:
  wan22-app:
    build:
      context: ../../..
      dockerfile: local_testing_framework/examples/deployment/docker/Dockerfile
    container_name: wan22-ui-variant
    restart: unless-stopped
    
    # GPU support
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    
    # Environment variables
    environment:
      - HF_TOKEN=${HF_TOKEN}
      - CUDA_VISIBLE_DEVICES=0,1
      - PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:512
      - LOG_LEVEL=INFO
      - ENABLE_METRICS=true
      - PROMETHEUS_ENABLED=true
    
    # Port mappings
    ports:
      - "8080:8080"   # Main application
      - "8081:8081"   # API
      - "9090:9090"   # Metrics
    
    # Volume mappings
    volumes:
      - ./models:/app/models
      - ./outputs:/app/outputs
      - ./cache:/app/cache
      - ./logs:/app/logs
      - ./reports:/app/reports
      - ./config.json:/app/config.json:ro
      - ./.env:/app/.env:ro
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "-m", "local_testing_framework", "validate-env", "--quick"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 32G
        reservations:
          memory: 16G
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: wan22-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    
  # Prometheus for monitoring (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: wan22-prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: wan22-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: wan22-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - wan22-app

volumes:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: wan22-network